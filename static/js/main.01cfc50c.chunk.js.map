{"version":3,"sources":["logo.svg","components/Search.js","components/VenueList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","_this2","react_default","a","createElement","className","type","autoFocus","placeholder","aria-label","query","onChange","event","searchQuery","target","Component","VenueList","getMarker","venId","markers","forEach","marker","setState","id","window","google","maps","trigger","venues","map","venLst","role","onClick","venue","name","tabIndex","key","App","getMap","url","index","document","getElementsByTagName","scripTag","src","async","defer","parentNode","insertBefore","getScript","initMap","obtVenue","axios","get","URLSearchParams","client_id","client_secret","near","ll","limit","v","then","response","data","groups","items","allVenues","catch","err","console","log","Map","getElementById","center","lat","lng","zoom","infoWindow","InfoWindow","pspVenue","venName","venLoc","location","formattedAddress","venCity","contentString","concat","Marker","position","title","icon","scaledSize","Size","push","addListener","setContent","setAnimation","Animation","BOUNCE","setTimeout","open","filterVenues","cantSeeMarkers","setVisible","match","RegExp","escapeRegExp","filter","test","every","components_Search","searchedVenues","work","components_VenueList","React","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01cfc50c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass Search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n  }\n\n\n  render() {\n    return (\n          <input\n          className=\"searchbx\"\n          type=\"text\"\n          autoFocus\n          placeholder=\"Search for venues\"\n          aria-label=\"Search\"\n          value={this.props.query}\n          onChange={event => this.props.searchQuery(event.target.value)}\n          />\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\n\nclass VenueList extends Component {\n\n  getMarker = (venId) => {\n    this.props.markers.forEach(marker => {\n      this.setState({ query: '' })\n      if (marker.id === venId) {\n        window.google.maps.event.trigger(marker, 'click');\n      }\n    });\n  };\n\n\n  render() {\n\n    return (\n      <div className=\"ven-lst\">\n       <ul className=\"\">\n          {this.props.venues.map(venLst => (\n            <li\n              className=\"\"\n              role=\"menuitem\"\n              onClick={() => {\n                this.getMarker(venLst.venue.id);\n              }}\n              aria-label={venLst.venue.name}\n              tabIndex=\"0\"\n              id={venLst.venue.id}\n              key={venLst.venue.id}\n            >\n              {venLst.venue.name}\n            </li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default VenueList;","// eslint-disable-next-line\nimport React from 'react';\n// eslint-disable-next-line\nimport * as ReactDOM from \"react-dom\";\n// eslint-disable-next-line\nimport logo from './logo.svg';\nimport './App.css';\n// eslint-disable-next-line\nimport Search from './components/Search';\n// eslint-disable-next-line\nimport VenueList from './components/VenueList';\nimport axios from 'axios';\nimport escapeRegExp from 'escape-string-regexp';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      venues: [],\n      markers: [],\n      cantSeeMarkers: [],\n      allVenues: [],\n      query: '',\n    };\n\n  }\n\n\n  componentDidMount() {\n    this.obtVenue();\n  }\n\n\n/*\n * Get map api key\n */\n  getMap = () => {\n    getScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBQ6zsiorJiComOV7nE9SBs3I43yLrpet4&callback=initMap\")\n    window.initMap = this.initMap\n  }\n\n/*\n * Get venues from Foursquare using Axios\n * Parameters obtained from Foursquare configuration docs\n */\n  obtVenue = (query) => {\n    const apiLoc = \"https://api.foursquare.com/v2/venues/explore?\"\n    const params = {\n      client_id: \"3BFFDXDSP4324WBGN02YMWZADLY1C0FIMIMBRMBI240DTTUO\",\n      client_secret: \"1A0PH415M44JSPIXVPNDC3T3XE40MDVYAU3FR5IFYBYF505C\",\n      query: 'food',\n      near: \"Palm Desert\",\n      ll: \"33.737627,-116.3751197\",\n      limit:10,\n      v: \"20183012\"\n    }\n    axios.get(apiLoc + new URLSearchParams(params))\n      .then(response => {\n        this.setState({\n          venues: response.data.response.groups[0].items,\n          allVenues: response.data.response.groups[0].items\n        }, this.getMap())\n      })\n      .catch(err => {\n        console.log(\"Alert: There is an error\" + err)\n      })\n  }\n\n\n/*\n * Initialize Google map\n * using Google Maps info window and marker documentation\n */\n  initMap = (query) => {\n    const map = new window.google.maps.Map(document.getElementById('gmap'), {\n      center: {lat: 33.737627, lng: -116.3751197},\n      zoom: 10\n    });\n\n      /*\n       * Info window creation\n       */\n      let infoWindow = new window.google.maps.InfoWindow()\n      let getMyMap = this.state.venues\n\n      // eslint-disable-next-line\n      getMyMap.map(pspVenue => {\n\n        // eslint-disable-next-line\n        let venId = pspVenue.venue.id\n        let venName = pspVenue.venue.name\n        let venLoc = pspVenue.venue.location.formattedAddress[0]\n        let venCity = pspVenue.venue.location.formattedAddress[1]\n        let contentString = `${venName} <br> ${venLoc} <br> ${venCity}`\n\n        /*\n         * Marker creation\n         */\n        let marker = new window.google.maps.Marker({\n          position: {lat: pspVenue.venue.location.lat, lng: pspVenue.venue.location.lng},\n          map: map,\n          title: venName,\n          id: venId,\n          icon: {url: \"https://unpkg.com/leaflet@1.3.1/dist/images/marker-icon.png\",scaledSize: new window.google.maps.Size(25, 41)}\n        })\n\n        this.state.markers.push(marker)\n\n\n        /*\n         * Show info window by clicking a marker\n         * Animate marker\n         * Google Maps Marker Animation document\n         */\n\n        marker.addListener('click', function() {\n          infoWindow.setContent(contentString)\n          marker.setAnimation(window.google.maps.Animation.BOUNCE);\n          setTimeout(function(){ marker.setAnimation(null); }, 1000)\n          infoWindow.open(map, marker);\n        })\n      })\n\n    }\n\n\n  searchQuery = (query) => {\n    this.setState({ query })\n    this.state.markers.map(marker => marker.setVisible(true))\n    let filterVenues\n    let cantSeeMarkers\n\n    if (query) {\n      const match = new RegExp(escapeRegExp(query), \"i\")\n      filterVenues = this.state.venues.filter(pspVenue =>\n        match.test(pspVenue.venue.name)\n      )\n      this.setState({ venues: filterVenues })\n      cantSeeMarkers = this.state.markers.filter(marker =>\n        filterVenues.every(pspVenue => pspVenue.venue.name !== marker.title)\n      )\n\n      /*\n       * Hiding the markers for venues not included in the filtered venues\n      */\n      cantSeeMarkers.forEach(marker => marker.setVisible(false))\n\n      this.setState({ cantSeeMarkers })\n    } else {\n      this.setState({ venues: this.state.allVenues })\n      this.state.markers.forEach(marker => marker.setVisible(true))\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"container\">\n\n        <div className=\"left-side\">\n          <Search\n            venues={this.state.allVenues}\n            markers={this.state.markers}\n            searchedVenues={this.searchedVenues}\n            query={this.state.query}\n            searchQuery={work => this.searchQuery(work)}\n          />\n\n          <VenueList\n            venues={this.state.venues}\n            markers={this.state.markers}\n          />\n        </div>\n        <div id=\"gmap\" role=\"application\"></div>\n      </div>\n      );\n    }\n\n}\n\n/*\n * Create script tag\n */\n\nfunction getScript(url) {\n  let index = window.document.getElementsByTagName(\"script\")[0]\n  let scripTag = window.document.createElement(\"script\")\n  scripTag.src = url\n  scripTag.async = true\n  scripTag.defer = true\n  index.parentNode.insertBefore(scripTag, index)\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// eslint-disable-next-line\nimport serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker();\n"],"sourceRoot":""}