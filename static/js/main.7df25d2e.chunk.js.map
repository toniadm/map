{"version":3,"sources":["logo.svg","components/Search.js","components/VenueList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","_this2","react_default","a","createElement","className","type","autoFocus","placeholder","aria-label","query","onChange","event","updateQuery","target","Component","VenueList","name","App","getMap","url","index","window","document","getElementsByTagName","scripTag","src","async","defer","parentNode","insertBefore","getScript","initMap","obtVenue","params","client_id","client_secret","near","ll","limit","v","axios","get","URLSearchParams","then","response","setState","venues","data","groups","items","allVenues","catch","err","console","log","map","google","maps","Map","getElementById","center","lat","lng","zoom","infoWindow","InfoWindow","pspVenue","venName","venue","venLoc","location","formattedAddress","venCity","contentString","concat","marker","Marker","position","size","Size","title","markers","push","addListener","setContent","setAnimation","Animation","BOUNCE","setTimeout","open","clearQuery","filterVenues","cantSeeMarkers","setVisible","match","RegExp","escapeRegExp","filter","test","every","forEach","venueName","item","i","components_VenueList","handleClick","selectStadium","key","components_Search","searchedVenues","b","id","role","React","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7df25d2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass Search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n  }\n\n\n  render() {\n    return (\n          <input\n          className=\"searchbx\"\n          type=\"text\"\n          autoFocus\n          placeholder=\"Search for venues\"\n          aria-label=\"Search\"\n          value={this.props.query}\n          onChange={event => this.props.updateQuery(event.target.value)}\n          />\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\n\nclass VenueList extends Component {\n\n\n  render() {\n\n    return <li>{this.props.name}</li>\n\n  }\n\n}\n\nexport default VenueList;","// eslint-disable-next-line\nimport React from 'react';\n// eslint-disable-next-line\nimport * as ReactDOM from \"react-dom\";\n// eslint-disable-next-line\nimport logo from './logo.svg';\nimport './App.css';\n// eslint-disable-next-line\nimport Search from './components/Search';\n// eslint-disable-next-line\nimport VenueList from './components/VenueList';\nimport axios from 'axios';\nimport escapeRegExp from 'escape-string-regexp';\n\n\n\n\nclass App extends React.Component {\n\n  constructor() {\n\n    super();\n    this.state = {\n      venues: [],\n      markers: [],\n      cantSeeMarkers: [],\n      allVenues: [],\n      query: ''\n    };\n\n  }\n\n\n  componentDidMount() {\n    this.obtVenue('resorts');\n  }\n\n\n/*\n * Get map api key\n */\n  getMap = () => {\n    getScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBQ6zsiorJiComOV7nE9SBs3I43yLrpet4&callback=initMap\")\n    window.initMap = this.initMap\n  }\n\n/*\n * Get venues from Foursquare using Axios\n * Parameters obtained from Foursquare configuration docs\n */\n  obtVenue = (query) => {\n    const apiLoc = \"https://api.foursquare.com/v2/venues/explore?\"\n    const params = {\n      client_id: \"3BFFDXDSP4324WBGN02YMWZADLY1C0FIMIMBRMBI240DTTUO\",\n      client_secret: \"1A0PH415M44JSPIXVPNDC3T3XE40MDVYAU3FR5IFYBYF505C\",\n      query: query,\n      near: \"Palm Desert\",\n      ll: \"33.737627,-116.3751197\",\n      limit:10,\n      v: \"20183012\"\n    }\n    axios.get(apiLoc + new URLSearchParams(params))\n      .then(response => {\n        this.setState({\n          venues: response.data.response.groups[0].items,\n          allVenues: response.data.response.groups[0].items\n        }, this.getMap())\n      })\n      .catch(err => {\n        console.log(\"Alert: There is an error\" + err)\n      })\n  }\n\n\n/*\n * Initialize Google map\n * using Google Maps info window and marker documentation\n */\n  initMap = (query) => {\n    const map = new window.google.maps.Map(document.getElementById('gmap'), {\n      center: {lat: 33.737627, lng: -116.3751197},\n      zoom: 10\n    });\n\n      /*\n       * Info window creation\n       */\n\n      let infoWindow = new window.google.maps.InfoWindow()\n      let getMyMap = this.state.venues\n\n      // eslint-disable-next-line\n      getMyMap.map(pspVenue => {\n\n        let venName = pspVenue.venue.name\n        let venLoc = pspVenue.venue.location.formattedAddress[0]\n        let venCity = pspVenue.venue.location.formattedAddress[1]\n        let contentString = `${venName} <br> ${venLoc} <br> ${venCity}`\n\n        /*\n         * Marker creation\n         */\n        let marker = new window.google.maps.Marker({\n          position: {lat: pspVenue.venue.location.lat, lng: pspVenue.venue.location.lng},\n          map: map,\n          size: new window.google.maps.Size(100, 100),\n          title: venName,\n        })\n\n        this.state.markers.push(marker)\n\n\n        /*\n         * Show info window by clicking a marker\n         * Animate marker\n         * Google Maps Marker Animation document\n         */\n\n        marker.addListener('click', function() {\n          infoWindow.setContent(contentString)\n          marker.setAnimation(window.google.maps.Animation.BOUNCE)\n          setTimeout(function(){ marker.setAnimation(null); }, 4000)\n          infoWindow.open(map, marker);\n        })\n      })\n\n    }\n\n  clearQuery = () => {\n    this.setState({ query: '' })\n  }\n\n\n  updateQuery = (query) => {\n    this.setState({ query })\n    this.state.markers.map(marker => marker.setVisible(true))\n    let filterVenues\n    let cantSeeMarkers\n\n    if (query) {\n      const match = new RegExp(escapeRegExp(query), \"i\")\n      filterVenues = this.state.venues.filter(pspVenue =>\n        match.test(pspVenue.venue.name)\n      )\n      this.setState({ venues: filterVenues })\n      cantSeeMarkers = this.state.markers.filter(marker =>\n        filterVenues.every(pspVenue => pspVenue.venue.name !== marker.title)\n      )\n\n      /*\n       * Hiding the markers for venues not included in the filtered venues\n      */\n      cantSeeMarkers.forEach(marker => marker.setVisible(false))\n\n      this.setState({ cantSeeMarkers })\n    } else {\n      this.setState({ venues: this.state.allVenues })\n      this.state.markers.forEach(marker => marker.setVisible(true))\n    }\n  }\n\n\n  render() {\n\n    let venueName = this.state.venues.map((item,i) =>\n      <VenueList handleClick={this.selectStadium} key={i} name={item.venue.name} />\n    );\n    console.log(venueName)\n\n    return (\n      <div className=\"app\">\n\n          <Search\n            venues={ this.state.allVenues }\n            markers={ this.state.markers }\n            searchedVenues={ this.searchedVenues }\n            query={this.state.query}\n            clearQuery={this.clearQuery}\n            updateQuery={b => this.updateQuery(b)}\n          />\n          <ul>\n            {venueName}\n          </ul>\n        <div id=\"gmap\" role=\"application\"></div>\n      </div>\n      );\n    }\n\n}\n\n/*\n * Create script tag\n */\n\nfunction getScript(url) {\n  let index = window.document.getElementsByTagName(\"script\")[0]\n  let scripTag = window.document.createElement(\"script\")\n  scripTag.src = url\n  scripTag.async = true\n  scripTag.defer = true\n  index.parentNode.insertBefore(scripTag, index)\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// eslint-disable-next-line\nimport serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker();\n"],"sourceRoot":""}