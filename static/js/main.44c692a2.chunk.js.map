{"version":3,"sources":["logo.svg","components/Search.js","components/VenueList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","_this2","react_default","a","createElement","className","type","tabIndex","placeholder","aria-label","query","onChange","event","searchQuery","target","Component","VenueList","getMarker","venId","markers","forEach","marker","setState","id","window","google","maps","trigger","venues","map","venLst","role","onClick","venue","key","name","App","getMap","url","index","document","getElementsByTagName","scripTag","src","async","defer","parentNode","insertBefore","getScript","initMap","obtVenue","axios","get","URLSearchParams","client_id","client_secret","near","ll","limit","v","then","response","data","groups","items","ourLocs","catch","err","alert","console","log","Map","getElementById","center","lat","lng","zoom","mapTypeControl","infoWindow","InfoWindow","maxWidth","pspVenue","venName","venLoc","location","formattedAddress","venCity","contentString","concat","Marker","position","title","icon","scaledSize","Size","push","addListener","setContent","setAnimation","Animation","BOUNCE","setTimeout","open","hideMarkers","venuesSearch","setVisible","match","RegExp","escapeRegExp","filter","test","every","components_Search","work","components_VenueList","React","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44c692a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass Search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n  }\n\n\n  render() {\n    return (\n          <input\n          className=\"searchbx\"\n          type=\"text\"\n          tabIndex=\"1\"\n          placeholder=\"Venue Search\"\n          aria-label=\"Search text\"\n          value={this.props.query}\n          onChange={event => this.props.searchQuery(event.target.value)}\n          />\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\n\nclass VenueList extends Component {\n\n  getMarker = (venId) => {\n    this.props.markers.forEach(marker => {\n      this.setState({ query: '' })\n      if (marker.id === venId) {\n        window.google.maps.event.trigger(marker, 'click');\n      }\n    });\n  };\n\n\n  render() {\n\n    return (\n       <ul className=\"\">\n          {this.props.venues.map(venLst => (\n            <li\n              className=\"\"\n              role=\"menuitem\"\n              onClick={() => {\n                this.getMarker(venLst.venue.id);\n              }}\n              tabIndex=\"1\"\n              id={venLst.venue.id}\n              key={venLst.venue.id}\n              aria-label={venLst.venue.name}\n            >\n              {venLst.venue.name}\n            </li>\n            ))}\n        </ul>\n    );\n  }\n}\n\nexport default VenueList;","// eslint-disable-next-line\nimport React from 'react';\n// eslint-disable-next-line\nimport * as ReactDOM from \"react-dom\";\n// eslint-disable-next-line\nimport logo from './logo.svg';\nimport './App.css';\n// eslint-disable-next-line\nimport Search from './components/Search';\n// eslint-disable-next-line\nimport VenueList from './components/VenueList';\nimport axios from 'axios';\nimport escapeRegExp from 'escape-string-regexp';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      venues: [],\n      markers: [],\n      hideMarkers: [],\n      ourLocs: [],\n      query: '',\n    };\n\n  }\n\n\n  componentDidMount() {\n    this.obtVenue();\n  }\n\n\n/*\n * Get map api key\n */\n  getMap = () => {\n    getScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBQ6zsiorJiComOV7nE9SBs3I43yLrpet4&callback=initMap\")\n    window.initMap = this.initMap\n  }\n\n/*\n * Get venues from Foursquare using Axios\n * Parameters obtained from Foursquare configuration docs\n */\n\n  obtVenue = (query) => {\n    const apiLoc = \"https://api.foursquare.com/v2/venues/explore?\"\n    const params = {\n      client_id: \"3BFFDXDSP4324WBGN02YMWZADLY1C0FIMIMBRMBI240DTTUO\",\n      client_secret: \"1A0PH415M44JSPIXVPNDC3T3XE40MDVYAU3FR5IFYBYF505C\",\n      query: 'resorts',\n      near: \"Palm Desert\",\n      ll: \"33.770180, -116.502970\",\n      limit: 5,\n      v: \"20183012\"\n    }\n    axios.get(apiLoc + new URLSearchParams(params))\n      .then(response => {\n        this.setState({\n          venues: response.data.response.groups[0].items,\n          ourLocs: response.data.response.groups[0].items\n        }, this.getMap())\n      })\n      .catch(err => {\n        alert(\"Unable to get data from Foursquare\")\n        console.log(\"There is an error from Foursquare\" + err)\n      })\n  }\n\n\n/*\n * Initialize Google map\n * using Google Maps info window and marker documentation\n */\n\n  initMap = (query) => {\n    const map = new window.google.maps.Map(document.getElementById('gmap'), {\n      center: {lat: 35.770180, lng: -116.502970},\n      zoom: 10,\n      mapTypeControl: false\n    });\n\n      /*\n       * Info window creation\n       */\n      let infoWindow = new window.google.maps.InfoWindow({maxWidth: 150})\n      let getMyMap = this.state.venues\n\n      // eslint-disable-next-line\n      getMyMap.map(pspVenue => {\n\n        // eslint-disable-next-line\n        let venId = pspVenue.venue.id\n        let venName = pspVenue.venue.name\n        let venLoc = pspVenue.venue.location.formattedAddress[0]\n        let venCity = pspVenue.venue.location.formattedAddress[1]\n        let dataAttr = \"Data obtained from Foursquare\"\n        let contentString = `${venName} <br> ${venLoc} <br> ${venCity} <br> <b>${dataAttr}`\n\n        /*\n         * Create marker with custom marker\n         */\n\n        let marker = new window.google.maps.Marker({\n          position: {lat: pspVenue.venue.location.lat, lng: pspVenue.venue.location.lng},\n          map: map,\n          title: venName,\n          id: venId,\n          icon: {url: \"https://unpkg.com/leaflet@1.3.1/dist/images/marker-icon.png\",scaledSize: new window.google.maps.Size(25, 41)}\n        })\n        this.state.markers.push(marker)\n\n\n        /*\n         * Clicking marker displays info window\n         * Google Maps Marker Animation document\n         *\n         */\n\n        marker.addListener('click', function() {\n          infoWindow.setContent(contentString)\n          marker.setAnimation(window.google.maps.Animation.BOUNCE)\n          setTimeout(function(){ marker.setAnimation(5); }, 750)\n          infoWindow.open(map, marker)\n        })\n      })\n\n    }\n\n    /*\n     *  Query to search for venues and select associated marker\n     *\n     */\n\n  searchQuery = (query) => {\n    this.setState({query})\n    this.state.markers.map(marker => marker.setVisible(true))\n    let hideMarkers\n    let venuesSearch\n\n    if (query) {\n      const match = new RegExp(escapeRegExp(query), \"i\")\n      venuesSearch = this.state.venues.filter(pspVenue =>\n        match.test(pspVenue.venue.name)\n      )\n      this.setState({ venues: venuesSearch })\n      hideMarkers = this.state.markers.filter(marker =>\n        venuesSearch.every(pspVenue => pspVenue.venue.name !== marker.title)\n      )\n\n      hideMarkers.forEach(marker => marker.setVisible(false))\n      this.setState({ hideMarkers })\n    } else {\n      this.setState({ venues: this.state.ourLocs })\n      this.state.markers.forEach(marker => marker.setVisible(true))\n    }\n  }\n\n\n  render() {\n\n    return (\n      <main>\n\n        <div className=\"searchbar\">\n          <Search\n            venues={this.state.ourLocs}\n            markers={this.state.markers}\n            query={this.state.query}\n            searchQuery={work => this.searchQuery(work)}\n          />\n\n          <VenueList\n            venues={this.state.venues}\n            markers={this.state.markers}\n          />\n        </div>\n\n        <div id=\"gmap\" role=\"application\"></div>\n      </main>\n      );\n    }\n\n}\n\n/*\n * Create script tag\n */\n\nfunction getScript(url) {\n  let index = window.document.getElementsByTagName(\"script\")[0]\n  let scripTag = window.document.createElement(\"script\")\n  scripTag.src = url\n  scripTag.async = true\n  scripTag.defer = true\n  index.parentNode.insertBefore(scripTag, index)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// eslint-disable-next-line\nimport serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker();\n"],"sourceRoot":""}